#!/bin/bash -e

ROOT=$(realpath $(dirname $0)/..)
cd $ROOT
base=
nolog=
pyargs=()

while [[ $# -gt 0 ]]; do
    case "$1" in
        --nolog)
            nolog=true
            shift
            ;;
        -d|--base)
            base=$2;
            shift
            shift
            ;;
        *)
            pyargs+=("$1")
            shift
            ;;
    esac
done

FSOCK=faucet_event.sock

if [ -n "$base" ]; then
    FORCH_BASE=$base
    FAUCET_EVENT_SOCK=$FORCH_BASE/$FSOCK
    FAUCET_CONFIG_DIR=$FORCH_BASE
    FORCH_CONFIG_DIR=$FORCH_BASE
    FORCH_LOG_DIR=$FORCH_BASE
    FAUCET_PROM_PORT_FILE=$FORCH_BASE/PROM_PORT.9302
    GAUGE_PROM_PORT_FILE=$FORCH_BASE/PROM_PORT.9303
else
    FAUCET_EVENT_SOCK=${FAUCET_EVENT_SOCK:-/var/run/faucet/$FSOCK}
    FAUCET_CONFIG_DIR=${FORCH_CONFIG_DIR:-/etc/faucet}
    FORCH_CONFIG_DIR=${FORCH_CONFIG_DIR:-/etc/faucet}
    FORCH_LOG_DIR=${FORCH_LOG_DIR:-/var/log/faucet}
    mkdir -p $FORCH_LOG_DIR $FORCH_CONFIG_DIR
fi

if [ "$nolog" = true ]; then
    FORCH_LOG_DIR=
fi

if [ -z "$CONTROLLER_NAME" ]; then
    CONTROLLER_NAME=$(hostname -s)
    echo Setting controller name to $CONTROLLER_NAME
else
    echo Using existing controller name $CONTROLLER_NAME
fi

if [ -n "$FAUCET_PROM_PORT" ]; then
    echo Using existing faucet prometheus port $FAUCET_PROM_PORT
elif [ -f "$FAUCET_PROM_PORT_FILE" ]; then
    FAUCET_PROM_PORT=$(< $FAUCET_PROM_PORT_FILE)
    echo Using faucet prometheus port $FAUCET_PROM_PORT from $FAUCET_PROM_PORT_FILE
else
    FAUCET_PROM_PORT=9302
    echo Using default faucet prometheus port $FAUCET_PROM_PORT
fi

if [ -n "$GAUGE_PROM_PORT" ]; then
    echo Using existing gauge prometheus port $GAUGE_PROM_PORT
elif [ -f "$GAUGE_PROM_PORT_FILE" ]; then
    GAUGE_PROM_PORT=$(< $GAUGE_PROM_PORT_FILE)
    echo Using gauge prometheus port $GAUGE_PROM_PORT from $GAUGE_PROM_PORT_FILE
else
    GAUGE_PROM_PORT=9303
    echo Using default gauge prometheus port $GAUGE_PROM_PORT
fi

if [ -n "$FORCH_LOG_DIR" ]; then
    echo Writing forch logs to $FORCH_LOG_DIR/forch.log
fi

if [ -z "$VIRTUAL_ENV" -a -f venv/bin/python3 ]; then
    PYTHON=venv/bin/python3
else
    PYTHON=python3
fi

export CONTROLLER_NAME
export FAUCET_PROM_PORT
export GAUGE_PROM_PORT
export FAUCET_EVENT_SOCK
export FAUCET_CONFIG_DIR
export FORCH_CONFIG_DIR
export FORCH_LOG_DIR
export PYTHONPATH
$PYTHON -m forch "${pyargs[@]}" || tail $FORCH_LOG_DIR/forch.log && false
