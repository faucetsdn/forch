#!/bin/bash -e

ROOT=$(realpath $(dirname $0)/..)
cd $ROOT

if [ $# != 1 ]; then
    echo $0 target
    false
fi
TARGET=$1
shift

GIT_BRANCH=`git rev-parse --abbrev-ref HEAD`

GIT_REMOTE=`git config branch.$GIT_BRANCH.remote` || true
if [ -z "$GIT_REMOTE" ]; then
    GIT_URL=`git config remote.origin.url`
    GIT_REMOTE=tag
else
    GIT_URL=`git remote get-url $GIT_REMOTE`
fi

echo Build branch $GIT_BRANCH from $GIT_REMOTE at $GIT_URL
GIT_PEER=`echo $GIT_URL | sed s/forch/$TARGET/`
echo Auto-generated $TARGET git repo $GIT_PEER

TARGET_REPO=$GIT_PEER
TARGET_VERSION=$(cat etc/${TARGET^^}_VERSION)

if [ -z "$VIRTUAL_ENV" ]; then
    python3 -m venv venv
    source venv/bin/activate
fi

SITE_PACKAGES_PATH=$(python3 -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')
rm -f $SITE_PACKAGES_PATH/$TARGET
ln -s $ROOT/$TARGET/$TARGET $SITE_PACKAGES_PATH/$TARGET

if [ -d $TARGET ]; then
    echo Dir $TARGET/ already exists. Not cloning.
else
    echo Cloning $TARGET locally...
    git clone $TARGET_REPO $TARGET
    (cd $TARGET; git checkout $TARGET_VERSION)
fi
