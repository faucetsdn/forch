#!/bin/bash

source bin/stack_functions

preamble_setup

faucet_log=inst/forch-faucet-1/faucet.log
forch_log=inst/forch-faucet-1/forch.log

#################################################################################

function simple_ping {
    label=$1
    rm -f $OUT_DIR/faux-1.pcap $OUT_DIR/t1sw2-eth28.pcap
    sudo timeout 3s tcpdump -lw $OUT_DIR/faux-1.pcap -i faux-1 &
    sudo timeout 3s tcpdump -lw $OUT_DIR/t1sw2-eth28.pcap -i t1sw2-eth28 &
    sudo timeout 3s tcpdump -lw $OUT_DIR/t1sw1-eth6.pcap -i t1sw1-eth6 &
    sleep 0.5
    ping=`docker exec forch-faux-1 ping -q -c 2 192.168.1.0 | fgrep packets`
    sleep 2.5
    sw1=`tcpdump -r $OUT_DIR/faux-1.pcap | wc -l`
    sw2=`tcpdump -r $OUT_DIR/t1sw2-eth28.pcap | wc -l`
    sw3=`tcpdump -r $OUT_DIR/t1sw1-eth6.pcap | wc -l`
    pingc=`echo $ping | sed -e 's/, time.*//'`
    echo ping $label \
         $((sw1 > 3)) $((sw1 < 10)) \
         $((sw2 > 0)) $((sw2 < 16)) \
         $((sw3 < 10)) \
         $pingc | tee -a $TEST_RESULTS
    echo faux-1 device pcap
    tcpdump -r $OUT_DIR/faux-1.pcap | head
    echo t1sw2 egress pcap
    tcpdump -r $OUT_DIR/t1sw2-eth28.pcap | head
    echo t1sw1 cross pcap
    tcpdump -r $OUT_DIR/t1sw1-eth6.pcap | head
}

function multi_ping {
    prefix=$1
    for trial in {01..10}; do
        simple_ping $prefix$trial
        if [ $trial -lt 5 ]; then
            docker exec forch-faux-2 ping -q -c 30 192.168.1.3 &
            restart_ovs
        fi
    done
}

rm -f $faucet_log inst/forch-faucet-1/ofchannel.log

reset_system
reset_stack
restart_ovs init

simple_ping initstate

sudo ip link set t1sw2-eth28 down
echo ping sw2down01 `date`
simple_ping sw2down01
simple_ping sw2down02

sudo ip link set t1sw2-eth28 up
echo ping sw2isup01 `date`
simple_ping sw2isup01
simple_ping sw2isup02

sudo ip link set t1sw1-eth28 down
echo ping sw1down `date`
multi_ping sw1down

echo Dump nz-kiwi-t1sw2 faucet.log
fgrep nz-kiwi-t1sw2 inst/forch-faucet-1/faucet.log

echo Done with test_reconfig. | tee -a $TEST_RESULTS
