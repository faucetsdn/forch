#!/bin/bash -e

ROOT=$(dirname $0)/..
cd $ROOT
local=
devices=

if [ "$1" == "local" ]; then
    local=local
    shift
fi

if [ "$1" == "devices" ]; then
    devices=y
    shift
fi

if [ -z "$1" ]; then
    mode=bond
else
    mode=$1
    shift
fi

source bin/stack_functions

###########################################################

bin/net_clean


add_br t1sw1 177 6001 7001

function add_faux {
    switch=$1
    port=$2
    fnum=$3
    bin/run_faux $fnum
    docker exec -ti forch-faux-$fnum ip addr flush faux-eth0
    docker exec -ti forch-faux-$fnum ifconfig faux-eth0 192.168.1.$fnum/16
    add_iface $switch $port faux-$fnum
}

echo Connecting faux interfaces
add_faux t1sw1 1 1
add_faux t1sw1 2 2
add_faux t1sw1 3 3

echo Starting faucet instances...
sudo rm -rf inst/
mkdir -p inst/forch-faucet-corp
cp etc/corp_$mode.yaml inst/forch-faucet-corp/faucet.yaml
docker kill forch-faucet-corp || true
sudo modprobe bonding
bin/run_faucet $local corp 6683

for index in 1; do
    controller=forch-faucet-$index
    mkdir -p inst/$controller/
    cp topo/$mode/*.yaml inst/$controller/
    docker kill $controller || true
    bin/run_faucet $local $index $((6000 + index)) $((8000 + index))
    bin/run_faucet $local gauge $index $((7000 + index)) $((9000 + index))
done

echo Letting system settle...
sleep 10

echo head of forch-faucet-1/faucet.log:
head inst/forch-faucet-1/faucet.log
echo

echo Starting connection warm-up for 10s...
docker exec forch-faux-0 ping -q -c 10 192.168.1.2 &
docker exec forch-faux-1 ping -q -c 10 192.168.1.3 &
docker exec forch-faux-2 ping -q -c 10 192.168.1.1 &
docker exec forch-faux-3 ping -q -c 10 192.168.1.1 &

echo Waiting for warm-ups to complete...
wait

echo Connection sanity check...
docker exec forch-faux-0 ping -q -c 1 192.168.1.2
docker exec forch-faux-1 ping -q -c 1 192.168.1.3
docker exec forch-faux-2 ping -q -c 1 192.168.1.1
docker exec forch-faux-3 ping -q -c 1 192.168.1.1

echo Done with stack setup mode $mode.
