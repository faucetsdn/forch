#!/bin/bash -e

ROOT=$(realpath $(dirname $0)/..)
cd $ROOT

GO_VERSION=1.13.3
FAUCET_REPO=https://github.com/grafnu/faucet.git
FAUCET_HASH=$(cat etc/FAUCET_VERSION)

sudo apt-get install openvswitch-switch protobuf-compiler python3-venv jq

if [ -z "$VIRTUAL_ENV" ]; then
    python3 -m venv venv
    source venv/bin/activate
fi

pip3 install -r etc/requirements.txt

rm -f $VIRTUAL_ENV/lib/python3.7/site-packages/faucet
ln -s $ROOT/faucet/faucet $VIRTUAL_ENV/lib/python3.7/site-packages/faucet

DEF_IFACE=`route -n | fgrep UG | awk '{print $8}'`
if [ -n "$DEF_IFACE" ]; then
    echo Allowing docker external access through interface $DEF_IFACE...
    sudo iptables -o docker0 -i $DEF_IFACE -A FORWARD -j ACCEPT
    sudo iptables -i docker0 -o $DEF_IFACE -A FORWARD -j ACCEPT
else
    echo No DEF_IFACE found. If this causes problems, maybe you need ipv4!
fi


if [ -d /usr/local/go ]; then
    echo /usr/local/go already installed, `/usr/local/go/bin/go version`
else
    go_zip=go$GO_VERSION.linux-amd64.tar.gz
    rm -rf build/go build/$go_zip
    mkdir -p build
    (cd build; wget https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz)
    (cd build; tar -xzf go$GO_VERSION.linux-amd64.tar.gz)
    sudo cp -a build/go /usr/local
    sudo chown root:root -R /usr/local/go
fi

rm -rf protoc-gen-doc
git clone https://github.com/pseudomuto/protoc-gen-doc.git

if [ -d faucet ]; then
    echo Dir faucet/ already exists. Not cloning.
else
    echo Cloning faucet locally...
    git clone $FAUCET_REPO faucet
    (cd faucet; git checkout $FAUCET_HASH)
fi

echo
echo Done with forch base setup.
