#!/bin/bash -e

ROOT=$(realpath $(dirname $0)/..)
cd $ROOT

GO_VERSION=1.13.3

sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get update

sudo apt-get install openvswitch-switch protobuf-compiler \
     python3-venv python3-dev jq docker-ce net-tools

if [ -z "$VIRTUAL_ENV" ]; then
    python3 -m venv venv
    source venv/bin/activate
fi

pip3 install -r etc/requirements.txt

DEF_IFACE=`route -n | egrep '\sUG\s' | awk '{print $8}'`
if [ -n "$DEF_IFACE" ]; then
    echo Allowing docker external access through interface $DEF_IFACE...
    sudo iptables -o docker0 -i $DEF_IFACE -A FORWARD -j ACCEPT
    sudo iptables -i docker0 -o $DEF_IFACE -A FORWARD -j ACCEPT
else
    echo No default interface found. If this causes problems, maybe you need ipv4!
    false
fi


echo Adding $USER to docker group...
sudo groupadd docker || true
sudo usermod -aG docker $USER

if [ -d /usr/local/go ]; then
    echo /usr/local/go already installed, `/usr/local/go/bin/go version`
else
    go_zip=go$GO_VERSION.linux-amd64.tar.gz
    rm -rf build/go build/$go_zip
    mkdir -p build
    (cd build; wget -q https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz)
    (cd build; tar -xzf go$GO_VERSION.linux-amd64.tar.gz)
    sudo cp -a build/go /usr/local
    sudo chown root:root -R /usr/local/go
fi

rm -rf protoc-gen-doc
git clone https://github.com/pseudomuto/protoc-gen-doc.git

echo
echo Done with forch base setup.
