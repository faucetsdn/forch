/*
 * dataplane_state API result.
 */
syntax = "proto3";

import "forch/proto/shared_constants.proto";

/*
 * Summary of overall dataplane state.
 */
message DataplaneState {
  // Deails of all switches in the dataplane.
  Switch switch = 1;

  // Details of all stack links in the dataplane.
  Links stack = 2;

  // Details of the egress links in the dataplane.
  Egress egress = 3;

  // VLAN states indexed by VLAN ID
  map<int32, VLANState> vlans = 4;

  // Overall status of the dataplane state.
  State.State dataplane_state = 5;

  // Summary detail of the dataplane state.
  string dataplane_state_detail = 6;

  // Number of times dataplane state ahs changed.
  int32 dataplane_state_change_count = 7;

  // The last time dataplane state changed.
  string dataplane_state_last_change = 8;

  // Link to top level system state.
  string system_state_url = 9;

  /*
   * Dataplane switches details
   */
  message Switch {
    // Map of switch status
    map<string, SwitchStatus> switches = 1;

    // Number of times the state of all switches as a whole has changed
    int32 switch_state_change_count = 2;

    // Last time the state of switches was updated
    string switch_state_last_change = 3;
  }

  /*
   * Dataplane stack links details
   */
  message Links {
    // Map of link status
    map<string, LinkStatus> links = 1;

    // Number of times the state of all switches as a whole has changed
    int32 links_change_count = 2;

    // Last time the state of switches was updated
    string links_last_change = 3;
  }

  /*
   * Egress links details
   */
  message Egress {
    // Over all egress state
    State.State egress_state = 1;

    // Details of egress link which is up
    string egress_state_detail = 2;

    // Number of times the egress state has changed
    int32 egress_state_change_count = 3;

    // The last time egress state changed
    string egress_state_last_change = 4;

    // The last time information was received about the egress state
    string egress_state_last_update = 5;

    // Active root switch of stack
    string active_root = 6;
    
    // Map of link status
    map<string, LinkStatus> links = 7;
  }

  /*
   * Switch status
   */
  message SwitchStatus {
    // Switch status, active or down
    State.State switch_state = 1;
  }

  /*
   * Stack link status
   */
  message LinkStatus {
    // Stack link status, active, up or down
    State.State link_state = 1;
  }

  /*
   * VLAN state
   */
  message VLANState {
    // packet rate state: unkown, healthy or broken
    State.State packet_rate_state = 1;
  }
}
