/*
 * switch_state API result
 */
syntax = "proto3";

import "forch/proto/shared_constants.proto";
import "forch/proto/path_node.proto";
import "forch/proto/acl_state.proto";

/*
 * State of switches
 */
message SwitchState {
  // Overall status of the switches
  State.State switch_state = 1;

  // Summary detail of the switch state
  string switch_state_detail = 2;

  // Number of times switch state has changed
  int32 switch_state_change_count = 3;

  // The last time switch state changed
  string switch_state_last_change = 4;

  // Link to top level system state
  string system_state_url = 5;

  // Detailed information about individual switches
  map<string, SwitchNode> switches = 6;

  // Restriction information about this query
  string switches_restrict = 7;

  // Information about a single switch
  message SwitchNode {
    // Static attributes
    Attributes attributes = 1;

    // State of this switch
    State.State switch_state = 2;

    // Number of times it has been restarted
    int32 restart_event_count = 3;

    // Number of times switch state has changed
    int32 switch_state_change_count = 4;

    // Last change time of switch state
    string switch_state_last_change = 5;

    // Information about all switch ports
    map<int32, Port> ports = 6;

    // Any port restrictions in effect
    int32 ports_restrict = 7;

    // Path from this switch to root
    PathState root_path = 8;

    // All the access port macs on this switch
    map<string, PortInfo> access_port_macs = 9;

    // All the stacking port macs on this switch
    map<string, PortInfo> stacking_port_macs = 10;

    // All the egress port macs on this switch
    map<string, PortInfo> egress_port_macs = 11;

    // States of all VLANs used by this switch, indexed by VLAN id
    map<int32, VLANState> vlans = 12;

    // Attributes about this switch
    message Attributes {
      int64 dp_id = 1;
    }
  }

  // Information about a port
  message Port {
    // Static port attributes
    Attributes attributes = 1;

    // Port state
    State.State port_state = 2;

    // native VLAN
    int32 vlan = 3;

    // DVA state
    DVAState.State dva_state = 4;

    // ACLs
    repeated ACLState acls = 5;

    // Port state last change time
    string state_last_change = 6;

    // Port state change count
    int32 state_change_count = 7;

    // Static port attributes
    message Attributes {
      // Port description
      string description = 1;

      // Port type
      string port_type = 2;

      // Peer stacking switch
      string stack_peer_switch = 3;

      // Peer stacking port
      int32 stack_peer_port = 4;
    }
  }

  message PortInfo {
    // Port number on this switch
    int32 port = 1;

    // Learned IP addresses for this MAC
    repeated string mac_ips = 2;

    // Learning timestamp
    string timestamp = 3;

    // url for host learning info
    string url = 4;
  }

  message PathState {
    // Path state
    State.State path_state = 1;

    // Path state detail
    string path_state_detail = 2;

    // Path
    repeated PathNode path = 3;
  }

  message VLANState {
    // vlan acls states
    repeated ACLState acls = 1;

    // packet rate state
    State.State packet_rate_state = 2;
  }
}
