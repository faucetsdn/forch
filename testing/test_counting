#!/bin/bash

source bin/stack_functions

preamble_setup

export CONTROLLER_NAME=127.0.0.1

unset change_counts
declare -g -A change_counts

function test_counting {
    fdesc=counting-$1
    fout_dir=$OUT_DIR/$fdesc
    mkdir -p $fout_dir

    echo Starting $fdesc tests | tee -a $TEST_RESULTS
    echo $fout_dir

    # Make sure counts have populated in the API
    sleep 20

    fetch_forch switch_state

    api_result=$fout_dir/switch_state.json

    for sw in 1 2; do
        for port in 1 2; do
            for acl in 0 1; do
                jq ".switches.\"nz-kiwi-t2sw$sw\".ports.\"$port\".acls[$acl].rules[0].description" $api_result | tee -a $TEST_RESULTS
                value=`jq ".switches.\"nz-kiwi-t2sw$sw\".ports.\"$port\".acls[$acl].rules[0].packet_count" $api_result`
                key=$sw$port$acl
                old=${change_counts[$key]:-$value}
                change_counts[$key]=$value
                delta=$((value - old))
                zone=$(((delta > 0) + (delta > 2) + (delta > 4) + (delta > 6)))
                echo $zone | tee -a $TEST_RESULTS
            done
        done
    done
}

echo Setting up stack and Forch...
bin/setup_counting local
if [ $? != 0 ]; then
    echo Error setting up counting stack.
    exit 1
fi

test_counting initial

echo Generating ARP and ICMP traffic...
docker exec forch-faux-1 ping -c 5 192.168.1.3 2>&1
docker exec forch-faux-2 ping -c 5 192.168.1.3 2>&1
docker exec forch-faux-4 ping -c 5 192.168.1.1 2>&1

test_counting basic
